openapi: 3.0.3
info:
  title: SerVu Restaurant Management API
  description: Restaurant management endpoints for SerVu Backend
  version: 1.0.0

paths:
  /restaurants:
    get:
      tags:
        - Restaurants
      summary: Get user's restaurants
      description: Get all restaurants owned by the current user
      responses:
        '200':
          description: Restaurants retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Restaurants
      summary: Create restaurant
      description: Create a new restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - address
              properties:
                name:
                  type: string
                  example: Mario's Italian Bistro
                address:
                  type: string
                  example: 123 Main St, New York, NY 10001
                phone:
                  type: string
                  example: +1-555-0123
                email:
                  type: string
                  format: email
                  example: info@mariosbistro.com
                description:
                  type: string
                  example: Authentic Italian cuisine in the heart of NYC
      responses:
        '201':
          description: Restaurant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /restaurants/{restaurantId}:
    get:
      tags:
        - Restaurants
      summary: Get restaurant
      description: Get restaurant details by ID
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Restaurant retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Restaurants
      summary: Update restaurant
      description: Update restaurant information (owner only)
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Mario's Italian Bistro & Bar
                address:
                  type: string
                  example: 123 Main St, New York, NY 10001
                phone:
                  type: string
                  example: +1-555-0123
                email:
                  type: string
                  format: email
                  example: info@mariosbistro.com
                description:
                  type: string
                  example: Authentic Italian cuisine with full bar service
      responses:
        '200':
          description: Restaurant updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          description: Restaurant ID
          example: 1
        name:
          type: string
          description: Restaurant name
          example: Mario's Italian Bistro
        address:
          type: string
          description: Restaurant address
          example: 123 Main St, New York, NY 10001
        phone:
          type: string
          description: Restaurant phone number
          example: +1-555-0123
        email:
          type: string
          format: email
          description: Restaurant email
          example: info@mariosbistro.com
        description:
          type: string
          description: Restaurant description
          example: Authentic Italian cuisine in the heart of NYC
        ownerId:
          type: integer
          description: ID of the restaurant owner
          example: 1
        isActive:
          type: boolean
          description: Whether the restaurant is active
          example: true
        createdAt:
          type: string
          format: date-time
          description: Restaurant creation timestamp
          example: 2024-01-15T10:30:00Z
        updatedAt:
          type: string
          format: date-time
          description: Restaurant last update timestamp
          example: 2024-01-20T14:45:00Z

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Invalid credentials
        code:
          type: string
          description: Error code
          example: VALIDATION_ERROR
        details:
          type: object
          description: Additional error details
          additionalProperties: true

  responses:
    UnauthorizedError:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Authentication required
            code: AUTH_REQUIRED

    ForbiddenError:
      description: Access forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: Access forbidden
            code: ACCESS_FORBIDDEN

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login endpoint

security:
  - bearerAuth: []

tags:
  - name: Restaurants
    description: Restaurant management endpoints